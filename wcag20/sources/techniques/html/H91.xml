<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE technique
  SYSTEM "../../xmlspec.dtd">
<technique id="H91">
   <short-name>HTML のフォームコントロール及びリンクを使用する</short-name>
   <applicability>
      <p>HTML のフォームコントロール及びリンク</p>
   </applicability>
   <applies-to>
      <success-criterion idref="keyboard-operation-keyboard-operable" relationship="sufficient"/>
      <success-criterion idref="keyboard-operation-all-funcs" relationship="sufficient"/>
      <success-criterion idref="ensure-compat-rsv" relationship="sufficient"/>
   </applies-to>
   <description>
    <p>この達成方法の目的は、インタラクティブなユーザインタフェースを構成する要素のキーボード操作及び支援技術との相互運用性を提供するために、標準的な HTML のフォームコントロール及びリンク要素を用いることである。</p>
    <p>ユーザエージェントは、HTML のフォームコントロール及びリンクのキーボード操作を提供している。さらに、ユーザエージェントは、フォームコントロール及びリンクを、アクセシビリティ API に結び付けている。支援技術は、アクセシビリティ API を利用して、役割 (role)、識別名 (name)、状態 (state)、値 (value) といった適切なアクセシビリティ情報を抽出し、それらを利用者に提供している。役割は HTML の要素によって提供され、名前はその要素に関連付けられているテキストによって提供される。値及び状態が適切な要素は、複合的なメカニズムを通じて、それらの値及び状態も支援技術に提示している。</p>
    <p>必須の属性を通じてテキストがすでにコントロールと関連付けられている場合もある。たとえば、送信ボタンは、<el>button</el> 要素内のテキスト又は画像の「<att>alt</att>」属性を識別名として用いている。フォームコントロールの場合は、<el>label</el> 要素又は「<att>title</att>」属性が用いられる。次の表は、HTML のフォームコントロール及びリンクの役割、識別名、値、状態がどのように決定されるかを示したものである。</p>
    <table border="1" cellpadding="5" summary="Table describing how the role, name, value and state are determined for HTML links and form controls.">
      <thead>
        <tr>
          <th>HTML 要素</th>
          <th>役割<!--br/--> (role)</th>
          <th>識別名<!--br/--> (name)</th>
          <th>値<!--br/--> (value)</th>
          <th>状態<!--br/--> (state)</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>&lt;a&gt;</td>
          <td>リンク</td>
          <td><code>&lt;a&gt;</code> 要素の <code>title</code> 属性、画像リンクの場合は <code>alt</code> 属性。<!--br/-->テキストと画像の <code>alt</code> 属性を両方が提供されている場合は、両者を結合する。</td>
          <td><code>href</code> 属性</td>
          <td> </td>
        </tr>
        <tr>
          <td>&lt;button&gt;</td>
          <td>プッシュボタン</td>
          <td><code>&lt;button&gt;</code> 要素内のテキスト又は <code>title</code> 属性</td>
          <td> </td>
          <td> </td>
        </tr>
        <tr>
          <td>&lt;fieldset&gt;</td>
          <td>グループ化</td>
          <td>フィールドセット要素にある <code>&lt;legend&gt;</code> 要素内のテキスト</td>
          <td> </td>
          <td> </td>
        </tr>
        <tr>
          <td>&lt;input type = "button", "submit", or "reset"&gt;</td>
          <td>プッシュボタン</td>
          <td><code>value</code> 属性</td>
          <td> </td>
          <td> </td>
        </tr>
        <tr>
          <td>&lt;input type = "image"&gt;</td>
          <td>プッシュボタン</td>
          <td><code>alt</code> 属性又は <code>title</code> 属性</td>
          <td> </td>
          <td> </td>
        </tr>
        <tr>
          <td>&lt;input type = "text"&gt;</td>
          <td>編集可能なテキスト</td>
          <td>そのコントロールに関連付けられた <code>&lt;label&gt;</code> 要素又は <code>title</code> 属性</td>
          <td><code>value</code> 属性</td>
          <td> </td>
        </tr>
        <tr>
          <td>&lt;input type = "password"&gt;</td>
          <td>編集可能なテキスト</td>
          <td>そのコントロールに関連付けられた <code>&lt;label&gt;</code> 要素又は <code>title</code> 属性</td>
          <td>値は意図的に隠されている</td>
          <td> </td>
        </tr>
        <tr>
          <td>&lt;input type="file"&gt;</td>
          <td>編集可能なテキスト</td>
          <td>そのコントロールに関連付けられた &lt;label&gt; 要素又は 'title' 属性</td>
          <td>'value' 属性</td>
          <td> </td>
        </tr>
        <tr>
          <td>&lt;input type="checkbox"&gt;</td>
          <td>チェックボックス</td>
          <td>そのコントロールに関連付けられた <code>&lt;label&gt;</code> 要素又は <code>title</code> 属性</td>
          <td> </td>
          <td><code>checked</code> 属性</td>
        </tr>
        <tr>
          <td>&lt;input type="radio"&gt;</td>
          <td>ラジオボタン</td>
          <td>そのコントロールに関連付けられた <code>&lt;label&gt;</code> 要素又は <code>title</code> 属性</td>
          <td> </td>
          <td><code>checked</code> 属性</td>
        </tr>
        <tr>
          <td>&lt;select&gt;</td>
          <td>リスト</td>
          <td>そのコントロールに関連付けられた <code>&lt;label&gt;</code> 要素又は <code>title</code> 属性</td>
          <td><code>&lt;option&gt;</code> 要素の <code>selected</code> 属性で「<code>selected</code>」と指定</td>
          <td> </td>
        </tr>
        <tr>
          <td>&lt;textarea&gt;</td>
          <td>編集可能なテキスト</td>
          <td>そのコントロールに関連付けられた <code>&lt;label&gt;</code> 要素又は <code>title</code> 属性</td>
          <td><code>&lt;textarea&gt;</code> 要素内のテキスト</td>
          <td> </td>
        </tr>
      </tbody>
    </table>
  </description>
   <examples>
      <eg-group>
      <head>リンク</head>
      <description><p>ユーザエージェントは、リンクをナビゲートして選択するメカニズムを提供する。次の各事例では、&lt;a href&gt; により、役割 (role) は "link" となる。&lt;a name&gt; は "link" の役割 (role) を提供しないことに注意する。値 (value) は、<att>href</att> 属性の URI である。</p>
<exsubhead>事例 1a</exsubhead><p>事例 1a では、名前 (name) はリンクの中にあるテキストである。この場合は「Example Site」が該当する。</p>
</description>
         <code role="xhtml"><![CDATA[<a href="www.example.com">Example Site</a>
                    ]]></code>
      <description><exsubhead>事例 1b</exsubhead><p>リンクの中にある画像に関する事例 1b では、画像の <att>alt</att> 属性が名前 (name) を提供している。例えば、Microsoft Inspect Objects などのように API を閲覧するツールには、<att>alt</att> 属性を可視化できないものもあるが、支援技術では抽出できる。</p>
</description>
               <code role="xhtml"><![CDATA[<a href="www.example.com"><img src="example_logo.gif" alt="Example"></a>
                    ]]></code>
      <description><exsubhead>事例 1c</exsubhead><p>事例 1c では、画像の代替テキストとリンクのテキストを連結するときに自動的に空白文字を挿入しない支援技術もある。テキストをスペースなしで連結すべきでない場合、画像と隣接する単語との間にスペースを挿入して、単語が混ざらないようにするのが最も安全である。</p>
</description>
         <code role="xhtml"><![CDATA[<a href="www.example.com"><img src="example_logo.gif" alt="Example"> Text</a>
]]></code>
      <a11ysuprorted rating="pass" exnumber="1c"/>
    </eg-group>
    <eg-group>
      <head>ボタン</head>
      <description><p>HTML では、ボタンを生成するのにさまざまな方法があるが、それらは全て「プッシュボタン」という役割 (role) に位置付けられる。</p>
<exsubhead>事例 2a</exsubhead><p>事例 2a では、<el>button</el> 要素内の「save」というテキストが名前 (name) となる。値 (value) はない。</p>
</description>
         <code role="xhtml"><![CDATA[<button>Save</button>
                    ]]></code>
      <description><exsubhead>事例 2b</exsubhead><p>事例 2b では、<code>value</code> 属性を用いて「Save」「Submit」「Reset」という名前 (name) を指定している。</p>
</description>
         <code role="xhtml"><![CDATA[<input type="button" value="Save" /> 
<input type="submit" value="Submit" />  
<input type="reset" value="Reset" />   
                    ]]></code>
      <description><exsubhead>事例 2c</exsubhead><p>事例 2c では、<att>alt</att> 属性を用いて「save」という名前 (name) を指定している。</p>
</description>
         <code role="xhtml"><![CDATA[<input type="image" src="save.gif" alt="save" /> 
                    ]]></code>
      <description><exsubhead>事例 2d</exsubhead><p>事例 2d では、<att>alt</att> 属性ではなく、<att>title</att> 属性を用いて「save」という名前 (name) を指定している。</p>
</description>
         <code role="xhtml"><![CDATA[<input type="image" src="save.gif" title="save" />
                    ]]></code>
      <description><exsubhead>事例 2e</exsubhead><p>事例 2e は、コンテンツ制作者が input 要素の 'alt' 属性と 'title' 属性の両方を指定する場合、ユーザエージェントが名前 (name) をどのように決定するかを明らかにする。この場合、ユーザエージェントは、 'alt' 属性 ("save") を使用して、 'title' 属性を無視する。</p>
</description>
      <code role="xhtml"><![CDATA[<input type="image" src="save.gif" alt="save" title="save the file" />
]]></code>
    </eg-group>
    <eg-group>
      <head>入力フィールド</head>
      <description><exsubhead>事例 3a</exsubhead><p>事例 3a では、入力フィールドが「編集可能テキスト」という役割 (role) を持っている。<el>label</el> 要素の <att>for</att> 属性が、<el>input</el> 要素の <att>id</att> 属性を参照することで、<el>label</el> 要素を <el>input</el> 要素と関連付けている。<el>input</el> 要素の名前 (name) は、<el>label</el> 要素で指定した「Type of fruit」となる。値 (value) は、<att>value</att> 属性の「bananas」となる。</p>
</description>
         <code role="xhtml"><![CDATA[<label for="text_1">Type of fruit</label>
<input id="text_1" type="text" value="bananas">
]]></code>
      <description><exsubhead>事例 3b</exsubhead><p>事例 3b では、入力フィールドが事例 3a と同じ役割 (role) を持つが、<phrase>値 (value) がなく、</phrase>名前 (name) を <att>title</att> 属性で指定している点が異なる。</p>
</description>
         <code role="xhtml"><![CDATA[<input id="text_1" type="text" title="Type of fruit">
]]></code>
    </eg-group>
    <eg-group>
      <head>チェックボックス</head>
      <description><p>事例 4 は、<el>input</el> 要素の <att>type</att> 属性から「チェックボックス」という役割 (role) を持っている。<el>label</el> 要素の <att>for</att> 属性が <el>input</el> 要素の <att>id</att> 属性を参照することで、<el>label</el> 要素を <el>input</el> 要素と関連付けている。<el>input</el> 要素の名前 (name) は、<el>label</el> 要素で指定した「Cheese」となる。状態 (state) は <att>checked</att> 属性で「チェックあり」又は「チェックなし」に設定できる。そのコントロールに対する利用者のインタラクションによって、状態 (state) が変更される。</p>
</description>
         <code role="xhtml"><![CDATA[<label for="cb_1">Cheese</label> 
<input id="cb_1" type="checkbox" checked="checked">
                    ]]></code>
    </eg-group>
    <eg-group>
      <head>ラジオボタン</head>
      <description><p>事例 5 は、<el>input</el> 要素の <att>type</att> 属性から「ラジオボタン」という役割 (role) を持っている。<el>input</el> 要素の名前 (name) は、<el>label</el> 要素から与えられる。状態 (state) は、<att>checked</att> 属性によって「チェックあり」又は「チェックなし」に設定できる。状態 (state) は、利用者が変更できる。</p>
</description>
         <code role="xhtml"><![CDATA[<input type="radio" name="color" id="r1" checked="checked"/><label for="r1">Red</label>
<input type="radio" name="color" id="r2" /><label for="r2">Blue</label>
<input type="radio" name="color" id="r3" /><label for="r3">Green</label>
                    ]]></code>
    </eg-group>
    <eg-group>
      <head>セレクトメニュー</head>
      <description><exsubhead>事例 6a</exsubhead><p>事例 6a は、<el>select</el> 要素によって「リストボックス」という役割 (role) を持っている。名前 (name) は「Numbers」で、<el>label</el> 要素から与えられている。<el>select</el> 要素に名前 (name) を付け忘れるのは、よくあるエラーの一つである。値 (value) は、<att>selected</att> 属性 (XHTML では値を "<code>selected</code>" と指定) のある <el>option</el> 要素であり、初期値は「Two」ということになる。</p>
</description>
         <code role="xhtml"><![CDATA[<label for="s1">Numbers</label>
<select id="s1" size="1">
 <option>One</option>
 <option selected="selected">Two</option>
 <option>Three</option>
</select>
                    ]]></code>
      <description><exsubhead>事例 6b</exsubhead><p>事例 6b では、事例 6a の <el>select</el> 要素と同じ名前 (name)、役割 (role)、値 (value) であるが、名前 (name) を <att>title</att> 属性で指定している点が異なる。この方法は、ラベルを視覚的に表示しないほうがよい場合に用いることができる。</p>
</description>
         <code role="xhtml"><![CDATA[<select id="s1" title="Numbers" size="1">
 <option>One</option>
 <option selected="selected">Two</option>
 <option>Three</option>
</select>
                    ]]></code>
    </eg-group>
    <eg-group>
      <head>テキストエリア</head>
      <description><exsubhead>事例 7a</exsubhead><p>事例 7a は、<el>textarea</el> 要素の「編集可能なテキスト」という役割 (role) を持っている。名前 (name) は、<el>label</el> 要素で指定した「Type your speech here」である。値 (value) は、<el>textarea</el> 要素内にある「Four score and seven years ago」である。</p>
</description>
         <code role="xhtml"><![CDATA[<label for="ta_1">Type your speech here</label>
<textarea id="ta_1" >Four score and seven years ago</textarea>
                    ]]></code>
      <description><exsubhead>事例 7b</exsubhead><p>事例 7b は、同じ役割 (role) を持ち、名前 (name) は <el>title</el> 属性を用いて指定していて、値 (value) は空である。</p>
</description>
         <code role="xhtml"><![CDATA[<textarea id="ta_1" title="Type your speech here" >Four score and seven years ago</textarea>
                    ]]></code>
    </eg-group>
    <eg-group>
      <head>フォームコントロールのグループ化</head>
      <description><exsubhead>ラジオボタンのフィールドセット</exsubhead><p>事例 8 のラジオボタンのフィールドセットには「グループ化」という役割 (role) がある。名前 (name) は <el>legend</el> 要素によって与えられている。</p>
</description>
         <code role="xhtml"><![CDATA[<fieldset>
  <legend>Choose a Color:</legend> 
     <input id="red" type="radio" name="color" value="red" /><label for="red">Red</label><br /> 
     <input id="blue" type="radio" name="color" value="blue" /><label for="blue">Blue</label><br /> 
     <input id="green" type="radio" name="color" value="green" /><label for="green">Green</label> 
</fieldset>
                    ]]></code>
    </eg-group>
   </examples>
   <resources>
      <see-also>
         <ulist>
            <item>
               <p><loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://usability.com.au/2008/09/accessible-forms-using-wcag-2-0/">Accessible Forms using WCAG 2.0</loc></p>
            </item>
            <item>
               <p><loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="https://msdn.microsoft.com/en-us/library/aa360193(VS.85).aspx">MSDN Accessible DHTML elements</loc>
								       </p>
            </item>
            <item>
               <p><loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="https://wiki.mozilla.org/Accessibility/AT-Windows-API#MSAA_Role_Support">Mozilla Accessibility/AT-Windows-API</loc></p>
            </item>
         </ulist>
      </see-also>
   </resources>
   <related-techniques>
      <relatedtech idref="H44"/>
   </related-techniques>
   <tests>
      <procedure>
      <olist>
        <item>
          <p>HTML のソースコードを調べる。</p>
        </item>
        <item>
          <p>リンク及びフォーム要素に対して、上記の表で示されているように、名前 (name)、値 (value)、状態 (state) が指定されていることを確認する。</p>
        </item>
      </olist>
    </procedure>
      <expected-results>
         <ulist>
        <item>
          <p>上記 2. の結果が真である。</p>
        </item>
      </ulist>
      </expected-results>
   </tests>
</technique>
